name: Deploy package to PyPI

on:
  release:
    types: [published]

jobs:
  build-linux:
    name: Build Linux wheels and source package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Update version in pyproject.toml from current git tag
        run: >-
          sed -i.bak "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" pyproject.toml && rm pyproject.toml.bak

      - name: Update version in setup.py from current git tag
        run: >-
          sed -i.bak "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" setup.py && rm setup.py.bak

      - name: Build packages
        run: >-
          docker run --rm -v ${{ github.workspace }}:/app quay.io/pypa/manylinux2014_x86_64:2024-09-16-ab73a4b bash -c '
            cd /app &&
            /opt/python/cp36-cp36m/bin/python -m build --wheel &&
            /opt/python/cp37-cp37m/bin/python -m build --wheel &&
            /opt/python/cp38-cp38/bin/python -m build --wheel &&
            /opt/python/cp39-cp39/bin/python -m build --wheel &&
            /opt/python/cp310-cp310/bin/python -m build --wheel &&
            /opt/python/cp311-cp311/bin/python -m build --wheel &&
            /opt/python/cp312-cp312/bin/python -m build --wheel &&
            /opt/python/cp313-cp313/bin/python -m build &&
            auditwheel repair $(ls dist/*.whl) &&
            rm dist/*.whl &&
            cp wheelhouse/*.whl dist
          '

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist

  build-macos:
    name: Build macOS wheels
    strategy:
      matrix:
        os:
          - "macos-11"
          - "macos-12"
          - "macos-13"
          - "macos-13-xlarge" # ARM
          - "macos-14"        # ARM
        python-version:
          - "3.6.7"
          - "3.7.1"
          - "3.8.0"
          - "3.9.0"
          - "3.10.0"
          - "3.11.0"
          - "3.12.0"
    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Update version in pyproject.toml from current git tag
        run: >-
          sed -i.bak "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" pyproject.toml && rm pyproject.toml.bak

      - name: Update version in setup.py from current git tag
        run: >-
          sed -i.bak "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" setup.py && rm setup.py.bak

      - name: Build package
        run: |
          pip install build
          python -m build --wheel

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist

  build-windows:
    name: Build Windows wheels
    strategy:
      matrix:
        os:
          - "windows-2019"
        python-version:
          - "3.6.7"
          - "3.7.1"
          - "3.8.0"
          - "3.9.0"
          - "3.10.0"
          - "3.11.0"
          - "3.12.0"
    runs-on: '${{ matrix.os }}'
    - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
    steps:
      - uses: actions/checkout@v4

      - name: Update version in pyproject.toml from current git tag
        run: >-
          sed -i "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" pyproject.toml

      - name: Update version in setup.py from current git tag
        run: >-
          sed -i "s/0\\.0\\.0\\.dev0/${GITHUB_REF/refs\/tags\/v/}/g" setup.py

      - name: Build package
        run: |
          pip install build
          python -m build --wheel

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist

  deploy:
    needs: [build-linux, build-macos, build-windows]
    environment:
      name: pypi
      url: https://pypi.org/project/stream-inflate/

    name: upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: artifact/
